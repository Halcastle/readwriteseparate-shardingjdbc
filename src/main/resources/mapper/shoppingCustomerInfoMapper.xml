<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.readwriteseparateshardingjdbc.mapper.ShoppingCustomerInfoMapper">
    <select id="findAll" resultType="ShoppingCustomerInfo">
        SELECT * FROM shopping_customer_info
    </select>
    <select id="findBySerialno" parameterType="String" resultType="ShoppingCustomerInfo">
        SELECT * FROM shopping_customer_info where id = #{id}
    </select>
    <select id="findByCertId" parameterType="String" resultType="ShoppingCustomerInfo">
        SELECT * FROM shopping_customer_info where certid = #{certId}
    </select>

    <insert id="insertCustomer" parameterType="ShoppingCustomerInfo" keyProperty="id" useGeneratedKeys="true">
        insert into shopping_customer_info(id,name,certid,gender,phone,address,photourl,status) value (#{id},#{name},#{certid},#{gender},#{phone},#{address},#{photourl},#{status})
    </insert>

    <insert id="insertCustomersBatch" parameterType="java.util.List" useGeneratedKeys="true">
        insert into shopping_customer_info (id,name,certid,gender,phone,address,photourl,status) values
<!--        <foreach collection="list" item="item" index="index" open="("  separator="," close=")">-->
        <foreach collection="list" item="item" index="index"  separator=",">
            (
            #{item.id},
            #{item.name},
            #{item.certid},
            #{item.gender},
            #{item.phone},
            #{item.address},
            #{item.photourl},
            #{item.status}
            )
        </foreach>
    </insert>

    <insert id="insertCustomerBatch" parameterType="ShoppingCustomerInfo" useGeneratedKeys="true">
        insert into shopping_customer_info(id,name,certid,gender,phone,address,photourl,status) value (#{id},#{name},#{certid},#{gender},#{phone},#{address},#{photourl},#{status})
    </insert>
<!--    <update id="updateCustomerByCustomerInfo" parameterType="ShoppingCustomerInfo"  keyProperty="id" useGeneratedKeys="true">-->
<!--    update shopping_customer_info-->
<!--    set-->
<!--    name = #{name},-->
<!--    certid = #{certid},-->
<!--    gender = #{gender},-->
<!--    address = #{address},-->
<!--    photourl = #{photourl},-->
<!--    status = #{status}-->
<!--    where-->
<!--    id = #{id}-->
<!--</update>-->

    <update id="updateCustomerByCustomerInfo" parameterType="ShoppingCustomerInfo" keyProperty="id" useGeneratedKeys="true">
        update shopping_customer_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="certid != null">
                certid = #{certid,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="photourl != null">
                photourl = #{photourl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>

<!-- 
1.namespace中需要与使用@Mapper的接口对应
2.UserMapper.xml文件名称必须与使用@Mapper的接口一致
3.标签中的id必须与@Mapper的接口中的方法名一致，且参数一致
-->