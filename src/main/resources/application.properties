# ----------------分库分表及读写分离配置-------------
logging.config=classpath:logback.xml
spring.shardingsphere.datasource.names=ds0,ds1,ds2
#数据源1
spring.shardingsphere.datasource.ds0.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url= jdbc:mysql://localhost:3306/db?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
spring.shardingsphere.datasource.ds0.username= root
spring.shardingsphere.datasource.ds0.password= root
#数据源2
spring.shardingsphere.datasource.ds1.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url= jdbc:mysql://localhost:3316/db?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
spring.shardingsphere.datasource.ds1.username= root
spring.shardingsphere.datasource.ds1.password=
#数据源3
spring.shardingsphere.datasource.ds2.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.jdbc-url= jdbc:mysql://localhost:3326/db?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
spring.shardingsphere.datasource.ds2.username= root
spring.shardingsphere.datasource.ds2.password=
#分库策略
##行表达式分片策略
##分片列名称
#spring.shardingsphere.sharding.tables.shopping_customer_info.database-strategy.inline.sharding-column= id
##分片算法行表达式，需符合groovy语法
#spring.shardingsphere.sharding.tables.shopping_customer_info.database-strategy.inline.algorithm-expression= ds$->{id % 3}
#用于多分片键的复合分片场景
spring.shardingsphere.sharding.tables.shopping_customer_info.database-strategy.complex.sharding-columns= id,certid
#复合分片算法类名称。该类需实现ComplexKeysShardingAlgorithm接口并提供无参数的构造器
spring.shardingsphere.sharding.tables.shopping_customer_info.database-strategy.complex.algorithm-class-name=com.example.readwriteseparateshardingjdbc.shardingAlgorithm.ComplexDbShardingAlgorithm
#分表策略
#三个库四个表
spring.shardingsphere.sharding.tables.shopping_customer_info.actual-data-nodes= ds$->{0..2}.shopping_customer_info$->{0..3}
##行表达式分片策略
#spring.shardingsphere.sharding.tables.shopping_customer_info.table-strategy.inline.sharding-column= id
#spring.shardingsphere.sharding.tables.shopping_customer_info.table-strategy.inline.algorithm-expression= shopping_customer_info$->{id % 4}
#用于多分片键的复合分片场景
#分片列名称，多个列以逗号分隔
spring.shardingsphere.sharding.tables.shopping_customer_info.table-strategy.complex.sharding-columns= id,certid
#复合分片算法类名称。该类需实现ComplexKeysShardingAlgorithm接口并提供无参数的构造器
spring.shardingsphere.sharding.tables.shopping_customer_info.table-strategy.complex.algorithm-class-name=com.example.readwriteseparateshardingjdbc.shardingAlgorithm.ComplexTableShardingAlgorithm
spring.shardingsphere.sharding.tables.shopping_customer_info.key-generator.column= id
spring.shardingsphere.sharding.tables.shopping_customer_info.key-generator.type= SNOWFLAKE

spring.shardingsphere.sharding.tables.shopping_order_info.actual-data-nodes=ds$->{0..2}.shopping_order_info$->{0..3}
spring.shardingsphere.sharding.tables.shopping_order_info.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.shopping_order_info.table-strategy.inline.algorithm-expression=shopping_order_info$->{id % 4}
spring.shardingsphere.sharding.tables.shopping_order_info.key-generator.column=id
spring.shardingsphere.sharding.tables.shopping_order_info.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.shopping_order_relation.actual-data-nodes=ds$->{0..2}.shopping_order_relation$->{0..3}
spring.shardingsphere.sharding.tables.shopping_order_relation.table-strategy.inline.sharding-column=orderserialno
spring.shardingsphere.sharding.tables.shopping_order_relation.table-strategy.inline.algorithm-expression=shopping_order_relation$->{orderserialno % 4}
spring.shardingsphere.sharding.tables.shopping_order_relation.key-generator.column=id
spring.shardingsphere.sharding.tables.shopping_order_relation.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.binding-tables=shopping_order_info,shopping_order_relation
spring.shardingsphere.sharding.broadcast-tables=shopping_commodity_info

#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.binding-tables=shopping_customer_info,t_order_item
#spring.shardingsphere.sharding.broadcast-tables=t_config
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column= id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression= ds$->{id % 3}

#spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=ds0
#spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=ds1, ds2

#负载均衡（官方提供两种，轮询算法：ROUND_ROBIN，随机访问算法：RANDOM）
#spring.shardingsphere.masterslave.name=ms
#spring.shardingsphere.masterslave.master-data-source-name=ds0
#spring.shardingsphere.masterslave.slave-data-source-names=ds1,ds2
#spring.shardingsphere.masterslave.load-balance-algorithm-type=ROUND_ROBIN

#打印sql（默认都是false）
spring.shardingsphere.props.sql.show=true
spring.shardingsphere.props.sql.detail=true

#mybatis的相关配置
#mapper配置文件
mybatis.mapper-locations: classpath:mapper/*.xml
mybatis.type-aliases-package:com.example.readwriteseparateshardingjdbc.entity
#开启驼峰命名
mybatis.configuration.map-underscore-to-camel-case: true
#mybatis.configuration.log-impl= org.apache.ibatis.logging.stdout.StdOutImpl
wp.test1=123
wp.test2:456









